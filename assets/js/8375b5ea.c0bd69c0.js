"use strict";(self.webpackChunkillium_documentation=self.webpackChunkillium_documentation||[]).push([[5254],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var o=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=o.createContext({}),d=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=d(e.components);return o.createElement(s.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},h=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(t),h=i,f=u["".concat(s,".").concat(h)]||u[h]||p[h]||r;return t?o.createElement(f,a(a({ref:n},c),{},{components:t})):o.createElement(f,a({ref:n},c))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,a=new Array(r);a[0]=h;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:i,a[1]=l;for(var d=2;d<r;d++)a[d]=t[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}h.displayName="MDXCreateElement"},2899:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var o=t(7462),i=(t(7294),t(3905));const r={slug:"/node",sidebar_position:1,description:"Running a node"},a="Running a node",l={unversionedId:"node/running-a-node",id:"node/running-a-node",title:"Running a node",description:"Running a node",source:"@site/docs/node/running-a-node.md",sourceDirName:"node",slug:"/node",permalink:"/node",draft:!1,editUrl:"https://github.com/project-illium/illium-documentation/docs/node/running-a-node.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/node",sidebar_position:1,description:"Running a node"},sidebar:"nodeSidebar",next:{title:"Config File",permalink:"/node/config-file"}},s={},d=[],c={toc:d},u="wrapper";function p(e){let{components:n,...t}=e;return(0,i.kt)(u,(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"running-a-node"},"Running a node"),(0,i.kt)("p",null,"To start running an illum full node first head over to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/project-illium/ilxd/releases"},"downloads page"),"\nand download the binaries for your operating system."),(0,i.kt)("p",null,"The download will be a .zip file that contains two executables:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ilxd"),": The illium full node application"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ilxcli"),": A command line interface to interact with a running instance of ilxd")),(0,i.kt)("p",null,"To start the node with default options run the following command in the terminal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ ./ilxd\n")),(0,i.kt)("p",null,"To see a list of runtime option use:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ ./ilxd --help\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Usage:\n  ilxd [OPTIONS]\n\nNode Options:\n  -v, --version                     Display version information and exit\n  -C, --configfile=                 Path to configuration file\n  -d, --datadir=                    Directory to store data\n      --logdir=                     Directory to log output\n      --walletdir=                  Directory to store wallet data\n  -l, --loglevel=                   Set the logging level [trace, debug, info,\n                                    warning, error, fatal]. (default: info)\n      --debug                       Enable libp2p debug logging to the terminal\n      --seedaddr=                   Override the default seed addresses with\n                                    the provided values\n      --listenaddr=                 Override the default listen addresses with\n                                    the provided values\n  -t, --testnet                     Use the test network\n      --alpha                       Use the alpha network\n  -r, --regtest                     Use regression testing mode\n      --regtestval                  Set self as the regtest genesis validator.\n                                    This can only be done on first startup.\n      --noupnp                      Disable use of upnp\n      --useragent=                  A custom user agent to advertise to the\n                                    network\n      --notxindex                   Disable the transaction index\n      --droptxindex                 Delete the tx index from the database\n      --wsindex                     Enable the wallet server index to serve\n                                    lite wallets\n      --dropwsindex                 Delete the wallet server index from the\n                                    database\n      --addrindex                   Enable the address index\n      --dropaddrindex               Delete the address index from the database                            \n      --maxbanscore=                The maximum ban score a peer is allowed to\n                                    have before getting banned (default: 100)\n      --banduration=                The duration for which banned peers are\n                                    banned for (default: 24h)\n      --walletseed=                 A mnemonic seed to initialize the node\n                                    with. This can only be used on first\n                                    startup.\n      --coinbaseaddr=               An optional address to send all coinbase\n                                    rewards to. If this option is not used the\n                                    wallet will automatically select an\n                                    internal address.\n      --networkkey=                 A network key to use for this node. This\n                                    will override the node's peer ID.\n      --prune                       Delete the blockchain from disk. The node\n                                    will store just the date needed to validate\n                                    new blocks.\n      --mock                        Set the node to use mock proofs instead of\n                                    full proofs. This option is only available\n                                    for regtest.\n\nPolicy:\n      --minfeeperkilobyte=          The minimum fee per kilobyte that the node\n                                    will accept in the mempool and generated\n                                    blocks\n      --minstake=                   The minimum stake required to accept a\n                                    stake tx into the mempool or a generated\n                                    block\n      --treasurywhitelist=          Allow these treasury txids into the mempool\n                                    and generated blocks\n      --blocksizesoftlimit=         The maximum size block this node will\n                                    generate\n      --maxmessagesize=             The maximum size of a network message. This\n                                    is a hard limit. Setting this value\n                                    different than all other nodes could fork\n                                    you off the network.\n\nRPC Options:\n      --rpccert=                    A path to the SSL certificate to use with\n                                    gRPC\n      --rpckey=                     A path to the SSL key to use with gRPC\n      --externalip=                 This option should be used to specify the\n                                    external IP address if using the\n                                    auto-generated SSL certificate.\n      --grpclisten=                 Add an interface/port to listen for\n                                    experimental gRPC connections in multiaddr\n                                    format (default:/ip4/127.0.0.1/tcp/5001)\n      --grpcauthtoken=              Set a token here if you want to enable\n                                    client authentication with gRPC.\n      --disablenodeservice          Disable the node RPC service. This option\n                                    should be used if running a public\n                                    blockchain or wallet server.\n      --disablewalletservice        Disable the wallet RPC service. This option\n                                    should be used if running a public\n                                    blockchain or wallet server.\n      --disablewalletserverservice  Disable the wallet server RPC service. This\n                                    will automatically be disable if wsindex is\n                                    disabled.\n\nTor Options:\n      --torbinary=                  A path to the Tor binary. If this is\n                                    provided the server will start tor\n                                    automatically and shut it down on close.\n                                    All incoming and outgoing connections will\n                                    be routed through Tor.\n      --torrcfile=                  A path to a custom torrc file if you want\n                                    to configure tor with your own settings.\n      --tordualstack                This option tells ilxd to accept\n                                    connections over Tor AND over the clear\n                                    internet. Clear TCP connections will be\n                                    prioritized. This mode is NOT private.\n\nHelp Options:\n  -h, --help                        Show this help message\n")))}p.isMDXComponent=!0}}]);