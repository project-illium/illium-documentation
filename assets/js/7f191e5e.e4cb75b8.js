"use strict";(self.webpackChunkillium_documentation=self.webpackChunkillium_documentation||[]).push([[8585],{3905:(e,t,o)=>{o.d(t,{Zo:()=>h,kt:()=>m});var n=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},h=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),u=c(o),d=a,m=u["".concat(l,".").concat(d)]||u[d]||p[d]||r;return o?n.createElement(m,i(i({ref:t},h),{},{components:o})):n.createElement(m,i({ref:t},h))}));function m(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,i=new Array(r);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<r;c++)i[c]=o[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},3289:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=o(7462),a=(o(7294),o(3905));const r={sidebar_position:9},i="Consensus Algorithm",s={unversionedId:"overview/consensus",id:"overview/consensus",title:"Consensus Algorithm",description:"Illium uses a variant of avalanche for its consensus algorithm. There are several major benefits of avalanche that",source:"@site/docs/overview/consensus.md",sourceDirName:"overview",slug:"/overview/consensus",permalink:"/overview/consensus",draft:!1,editUrl:"https://github.com/project-illium/illium-documentation/docs/overview/consensus.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Assets",permalink:"/overview/assets"},next:{title:"Chain Selection",permalink:"/overview/chain-selection"}},l={},c=[{value:"How&#39;s it work?",id:"hows-it-work",level:2},{value:"Staking",id:"staking",level:2},{value:"Rewards",id:"rewards",level:2},{value:"Block Creation",id:"block-creation",level:2}],h={toc:c},u="wrapper";function p(e){let{components:t,...o}=e;return(0,a.kt)(u,(0,n.Z)({},h,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"consensus-algorithm"},"Consensus Algorithm"),(0,a.kt)("p",null,"Illium uses a variant of avalanche for its consensus algorithm. There are several major benefits of avalanche that\nother consensus algorithms do not have."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Near instant transaction finalization"),": Transactions finalize as fast as network latency will allow for. This is\nmuch different from Proof-of-work and even most Proof-of-stake algorithms which often take a number of minutes for\ntransactions to confirm. And confirmations in Proof-of-work or Proof-of-stake blockchains are not final and remain\npotentially reversible for some time after confirmation. In illium transactions are final, meaning they've reached a\npoint of irreversibility, just seconds after the transaction is made.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"High level of security"),": We'll talk about security in more depth below, but generally most Proof-of-work and\nProof-of-stake blockchains have a 51% security threshold. Meaning if an attacker can gain 51% of the mining power or\nstake they can do some damage to the network. With avalanche the threshold for serious damage is much higher \u2015 generally over 70%.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Energy Efficiency"),": Obviously Proof-of-work blockchains consume extreme amounts of energy that just isn't needed\nby Proof-of-stake or Avalanche. "))),(0,a.kt)("h2",{id:"hows-it-work"},"How's it work?"),(0,a.kt)("p",null,"Imagine you have a room full of people and everyone's trying to decide between two valid, conflicting blocks \u2015 block A and\nblock B. We don't really care which block we select, just that all the honest participants in the room select the same\nblock. We'll perform an algorithm that goes like this:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Everyone starts with an initial preference, either block A or block B, based on which block they saw first."),(0,a.kt)("li",{parentName:"ul"},"Each person will conduct multiple rounds of polls of a random subset of people in the room."),(0,a.kt)("li",{parentName:"ul"},"Each round they will select 10 other people ask them what their current preference is (block A or B)."),(0,a.kt)("li",{parentName:"ul"},"If the majority of those polled agree with a person's current preference they will keep their preference the\nsame and proceed to round 2. "),(0,a.kt)("li",{parentName:"ul"},"If the majority prefer the opposite of a person's current preference, they will flip their preference and proceed\nto round 2."),(0,a.kt)("li",{parentName:"ul"},"The process will be repeated for the remaining rounds. ")),(0,a.kt)("p",null,"At the end of the process all honest nodes should have the same current preference. The reason for this is the\nalgorithm is designed to tip one way or another. Even in the event of a worst-case scenario initial preference split\n50-50, it's unlikely that it will still be 50-50 after the first round of polling due simply to the random nature of the\npolling. Even if somehow it did, it's extremely unlikely that would remain so after round 2 (or 3, 4, etc.). "),(0,a.kt)("p",null,"What you might see after each round is something like:"),(0,a.kt)("p",null,"Round 1: 51-49",(0,a.kt)("br",{parentName:"p"}),"\n","Round 2: 61-39",(0,a.kt)("br",{parentName:"p"}),"\n","Round 3: 84-16",(0,a.kt)("br",{parentName:"p"}),"\n","Round 4: 98-2",(0,a.kt)("br",{parentName:"p"}),"\n","Round 5: 100-0"),(0,a.kt)("p",null,"Very quickly the honest participants come to consensus. "),(0,a.kt)("p",null,"How might this system be attacked? Malicious participants could depart from the protocol and strategically flip their\nvotes to try to disrupt and slow down the consensus process. "),(0,a.kt)("p",null,"The amazing thing about avalanche is that if all the honest participants had infinite time, they would still come to a\nconsensus no matter what percentage of participants are malicious."),(0,a.kt)("p",null,"Of course in the real world we don't have infinite time. Blocks need to finalize fairly quickly. So we have to stop\npolling at some point. This means that if the percentage of malicious participants is above some critical threshold,\ntypically around 70%, the honest participants could fail to come to consensus. "),(0,a.kt)("p",null,"70% is pretty high. Much higher than the 51% threshold in most other blockchains. But even here 70% would be trivial to\nachieve if participating in the consensus process was costless. Malicious users would just spin up many nodes and\noverwhelm the network. "),(0,a.kt)("p",null,"So we need to gate access to the consensus process and make participating have a cost. "),(0,a.kt)("h2",{id:"staking"},"Staking"),(0,a.kt)("p",null,"In Illium access to the consensus group is limited to nodes which have staked a minimum amount of coins and the polling\nalgorithm selects nodes randomly from the coin-weighted list of stakers (which we will call validators going forward)."),(0,a.kt)("p",null,"In this sense Illium ",(0,a.kt)("em",{parentName:"p"},"is")," a Proof-of-stake coin. It just uses the avalanche protocol to solve some of the problems with\nProof-of-stake, such as the nothing-at-stake problem, which Proof-of-stake coins typically solve through other\nmechanisms."),(0,a.kt)("p",null,"To stake coins users broadcast a special ",(0,a.kt)("inlineCode",{parentName:"p"},"StakeTransaction")," which locks up a given utxo:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message StakeTransaction {\n    bytes validator_ID = 1;\n    uint64 amount      = 2;\n    bytes nullifier    = 3;\n    bytes txoc_root    = 4;\n    int64 locked_until = 5;\n    bytes signature    = 6;\n    bytes proof        = 7;\n}\n")),(0,a.kt)("p",null,"Full nodes validate the transaction and, when it's included in a block, add the validator to the validator set. The validator\ncan remove himself from the validator set by spending his staked utxo. The appearance of the nullifier in a standard\ntransaction triggers the stake to be removed from the validator set. Validators are automatically removed from the set\nafter 26 weeks if coins are not re-staked."),(0,a.kt)("h2",{id:"rewards"},"Rewards"),(0,a.kt)("p",null,"Unlike Bitcoin, illium blocks do not create new coins for the block creator. Since there is no cost to creating a block,\nvalidators would be incentivized to flood the network with blocks to try to earn the reward. "),(0,a.kt)("p",null,"For the same reason, transactions fees are burned and are not paid to the creator of the block."),(0,a.kt)("p",null,"Instead, validators are rewarded at fixed one-week intervals. At each interval, each validator is credited with their\nweighted share of that week's block reward. They can claim that share by creating and broadcasting a special ",(0,a.kt)("inlineCode",{parentName:"p"},"CoinbaseTransaction"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message CoinbaseTransaction {\n    bytes validator_ID       = 1;\n    uint64 new_coins         = 2;\n    repeated Output outputs  = 3;\n    bytes signature          = 4;\n    bytes proof              = 5;\n}\n")),(0,a.kt)("p",null,"Coinbase transactions are only valid for validators with an unclaimed reward. If a non-validator, or a validator with\nno remaining unclaimed reward broadcasts a coinbase transaction, it will be invalid. "),(0,a.kt)("h2",{id:"block-creation"},"Block Creation"),(0,a.kt)("p",null,"Blocks don't create themselves. A validator needs to gather transactions, put them in a block, and broadcast it. Unlike\nmost other blockchains Illium has no fixed block interval. Blocks can be created as fast as transactions are generated. "),(0,a.kt)("p",null,"Also unlike other Proof-of-stake chains, there are no restrictions on which validator can create a block. This\ncreates a potential attack vector whereby a malicious validator could flood the network with blocks, clog up the\nnetwork, and slow down the consensus process. "),(0,a.kt)("p",null,"To prevent this type of attack, validators are expected to create blocks in proportion to their weighted share of the\ntotal stake. If a validator has 2% of the total stake, they should average 2% of the blocks over some interval. "),(0,a.kt)("p",null,"If the number of blocks created by a validator deviates from their expected number of blocks by some standard deviation\n(up or down) they will lose their block reward. If the misbehavior continues, they will lose their stake. "),(0,a.kt)("p",null,"There's also burst protection whereby a validator will be banned if he creates too large a percentage of the most recent blocks."))}p.isMDXComponent=!0}}]);